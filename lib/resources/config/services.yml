parameters:

    # controller annotation handlers
    conga.controller.rest.annotations.handler.constructor: "@conga/framework-rest:annotation/controller/handler/RestControllerAnnotationHandler"

    # resource annotation handler
    conga.rest.resource.annotation.handler.constructor: "@conga/framework-rest:annotation/ResourceAnnotationHandler"

    # resource registry
    conga.rest.resource.registry.constructor: "@conga/framework-rest:rest/RestResourceRegistry"

    # the response handler
    conga.rest.response.handler.constructor: "@conga/framework-rest:response/RestResponseHandler"

    # the serializer
    conga.rest.serializer.constructor: "@conga/framework-rest:rest/serializer/JsonApiRestSerializer"

    # rest manager
    conga.rest.manager.constructor: "@conga/framework-rest:RestManager"

    # rest router
    conga.rest.router.constructor: "@conga/framework-rest:router/RestRouter"

    # rest normalizer
    conga.rest.normalizer.constructor: "@conga/framework-rest:specification/RestNormalizer"

    # rest resource mapper
    conga.rest.mapper.constructor: "@conga/framework-rest:rest/RestMapper"

    # default REST method mapping
    rest.methods:

        # normal uris
        - { path : '/',    action: 'list',    method: 'GET',    name: 'list' }
        - { path : '/:id', action: 'get',     method: 'GET',    name: 'get' }
        - { path : '/',    action: 'post',    method: 'POST',   name: 'post' }
        - { path : '/:id', action: 'patch',   method: 'PATCH',  name: 'patch' }
        - { path : '/:id', action: 'put',     method: 'PUT',    name: 'put' }
        - { path : '/:id', action: 'delete',  method: 'DELETE', name: 'delete' }

        # resource relationships
        - {
            path : '/:id/relationships/:attribute',
            action: 'getRelationship',
            method: 'GET',
            name: 'get.relationship'
          }
        - {
            path : '/:id/relationships/:attribute',
            action: 'postRelationship',
            method: 'POST',
            name: 'post.relationship'
          }
        - {
            path : '/:id/relationships/:attribute',
            action: 'patchRelationship',
            method: 'PATCH',
            name: 'patch.relationship'
          }
        - {
            path : '/:id/relationships/:attribute',
            action: 'deleteRelationship',
            method: 'DELETE',
            name: 'delete.relationship'
          }
        - {
            path : '/:id/:attribute',
            action: 'getRelatedResource',
            method: 'GET',
            name: 'related'
          }


services:

    # handler to process the REST annotations on controllers
    conga.controller.rest.annotations.handler:
        constructor: "%conga.controller.rest.annotations.handler.constructor%"
        arguments: ["@conga.rest.resource.registry"]
        tags:
            - { name: controller.annotation.handler, method: handleAnnotations, priority: 1024 }

    # handler to process the REST annotations on models
    conga.rest.resource.annotation.handler:
        constructor: "%conga.rest.resource.annotation.handler.constructor%"
        arguments: ["@namespace.resolver", "@conga.rest.resource.registry"]

    # registry which holds all of the metadata for resources
    conga.rest.resource.registry:
        constructor: "%conga.rest.resource.registry.constructor%"

    # the REST manager
    conga.rest.manager:
        constructor: "%conga.rest.manager.constructor%"
        tags:
            - { name: kernel.event, event: kernel.compile, method: onKernelCompile, priority: 0 }

    # conga_rest_serializer:
    #     constructor: "%conga.rest.serializer.constructor%"

    # the default json response handler
    conga.rest.response.handler:
        constructor: "%conga.rest.response.handler.constructor%"

    conga.rest.router:
        constructor: "%conga.rest.router.constructor%"
        arguments: ["@router", "@conga.rest.resource.registry"]

    conga.rest.normalizer:
        constructor: "%conga.rest.normalizer.constructor%"
        arguments: ["@conga.rest.resource.registry", "@conga.rest.mapper", "@conga.rest.router"]

    conga.rest.mapper:
        constructor: "%conga.rest.mapper.constructor%"
        arguments: ["@conga.rest.resource.registry"]


    # the json body parser
    conga.express.body.parser.raw:
        function: "@conga/framework-rest:body-parser/raw"
        tags:
            - { name: express.body.parser, id: "raw" }
