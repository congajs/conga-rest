parameters:

    # controller annotation handlers
    conga.controller.rest.annotations.handler.constructor: "@conga/framework-rest:annotation/controller/handler/RestControllerAnnotationHandler"

    # resource annotation handler
    conga.rest.resource.annotation.handler.constructor: "@conga/framework-rest:annotation/ResourceAnnotationHandler"

    # resource registry
    conga.rest.resource.registry.constructor: "@conga/framework-rest:rest/RestResourceRegistry"

    # the response handler
    conga.rest.response.handler.constructor: "@conga/framework-rest:response/RestResponseHandler"

    # the serializer
    conga.rest.serializer.constructor: "@conga/framework-rest:rest/serializer/JsonApiRestSerializer"

    # rest manager
    rest.manager.constructor: "@conga/framework-rest:rest/RestManager"

    # resource registry
    conga.rest.resource.registry: "@conga/framework-rest:rest/RestResourceRegistry"

    # default REST method mapping
    rest.methods:

        # normal uris
        - { path : '/',    action: 'list', method: 'GET',       name: 'list' }
        - { path : '/:id', action: 'find',    method: 'GET',    name: 'find.one' }
        - { path : '/',    action: 'create',  method: 'POST',   name: 'create' }
        - { path : '/:id', action: 'update',  method: 'PATCH',  name: 'update' }
        - { path : '/:id', action: 'remove',  method: 'DELETE', name: 'delete' }

        # resource relationships
        - { path : '/:id/relationships/:attribute', action: 'findRelationship',   method: 'GET',   name: 'relationships.self' }
        - { path : '/:id/relationships/:attribute', action: 'updateRelationship', method: 'PATCH', name: 'relationships.update' }
        - { path : '/:id/:attribute',               action: 'findRelationship',   method: 'GET',   name: 'relationships.related' }

    # REST parameter mapping
    rest.parameters:
        SORT:          sort
        LIMIT:         limit
        SKIP:          skip
        FILTER:        filter
        SPARSE_FIELDS: fields
        INCLUDE:       include

services:

    # handler to process the REST annotations on controllers
    conga.controller.rest.annotations.handler:
        constructor: "%conga.controller.rest.annotations.handler.constructor%"
        arguments: ["@conga.rest.resource.registry"]
        tags:
            - { name: controller.annotation.handler, method: handleAnnotations, priority: 1024 }

    # handler to process the REST annotations on models
    conga.rest.resource.annotation.handler:
        constructor: "%conga.rest.resource.annotation.handler.constructor%"
        arguments: ["@namespace.resolver", "@conga.rest.resource.registry"]

    # registry which holds all of the metadata for resources
    conga.rest.resource.registry:
        constructor: "%conga.rest.resource.registry.constructor%"

    # the REST manager
    rest.manager:
        constructor: "%rest.manager.constructor%"
        tags:
            - { name: kernel.event, event: kernel.compile, method: onKernelCompile, priority: 0 }

    # conga_rest_serializer:
    #     constructor: "%conga.rest.serializer.constructor%"

    # the default json response handler
    conga.rest.response.handler:
        constructor: "%conga.rest.response.handler.constructor%"
